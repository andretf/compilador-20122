Terminals unused in grammar

   KW_FLOAT
   KW_BOOL
   KW_DO
   LIT_FLOAT
   LIT_FALSE
   LIT_TRUE
   TOKEN_ERROR


State 113 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: toplevel_decls

    2 toplevel_decls: /* empty */
    3               | toplevel_decl toplevel_decls

    4 toplevel_decl: vardecl
    5              | fundecl

    6 vardecl: type identifier ';'
    7        | type identifier '[' LIT_INTEGER ']' ';'

    8 fundecl: type identifier '(' parameters ')' command

    9 parameters: /* empty */
   10           | param_list

   11 param_list: param
   12           | param ',' param_list

   13 param: type identifier

   14 type: KW_INT
   15     | KW_CHAR

   16 identifier: TK_IDENTIFIER

   17 command: simple_statement
   18        | block
   19        | empty_command

   20 block: '{' commands '}'

   21 commands: command_list

   22 command_list: command
   23             | command ';' command_list

   24 empty_command: /* empty */

   25 simple_statement: expr
   26                 | KW_RETURN expr
   27                 | KW_READ identifier
   28                 | KW_PRINT expr
   29                 | lvalue '=' expr
   30                 | if_statement
   31                 | while_statement

   32 lvalue: identifier
   33       | identifier '[' expr ']'

   34 if_statement: KW_IF '(' expr ')' KW_THEN command
   35             | KW_IF '(' expr ')' KW_THEN command KW_ELSE command

   36 while_statement: KW_WHILE '(' expr ')' command

   37 expr: atom
   38     | identifier '[' expr ']'
   39     | identifier '(' arguments ')'
   40     | expr '+' expr
   41     | expr '-' expr
   42     | expr '*' expr
   43     | expr '/' expr
   44     | expr '%' expr
   45     | expr '<' expr
   46     | expr '>' expr
   47     | expr OPERATOR_LE expr
   48     | expr OPERATOR_GE expr
   49     | expr OPERATOR_EQ expr
   50     | expr OPERATOR_NE expr
   51     | expr OPERATOR_AND expr
   52     | expr OPERATOR_OR expr
   53     | '!' expr
   54     | '-' expr
   55     | '(' expr ')'

   56 atom: TK_IDENTIFIER
   57     | LIT_INTEGER
   58     | LIT_CHAR
   59     | LIT_STRING

   60 arguments: /* empty */
   61          | arg_list

   62 arg_list: expr
   63         | expr ',' arg_list


Terminals, with rules where they appear

$end (0) 0
'!' (33) 53
'%' (37) 44
'(' (40) 8 34 35 36 39 55
')' (41) 8 34 35 36 39 55
'*' (42) 42
'+' (43) 40
',' (44) 12 63
'-' (45) 41 54
'/' (47) 43
';' (59) 6 7 23
'<' (60) 45
'=' (61) 29
'>' (62) 46
'[' (91) 7 33 38
']' (93) 7 33 38
'{' (123) 20
'}' (125) 20
KW_INT (256) 14
KW_FLOAT (257)
KW_BOOL (258)
KW_CHAR (259) 15
KW_IF (261) 34 35
KW_THEN (262) 34 35
KW_ELSE (263) 35
KW_WHILE (264) 36
KW_DO (265)
KW_PRINT (266) 28
KW_RETURN (267) 26
KW_READ (268) 27
OPERATOR_LE (270) 47
OPERATOR_GE (271) 48
OPERATOR_EQ (272) 49
OPERATOR_NE (273) 50
OPERATOR_AND (274) 51
OPERATOR_OR (275) 52
TK_IDENTIFIER (280) 16 56
LIT_INTEGER (281) 7 57
LIT_FLOAT (282)
LIT_FALSE (283)
LIT_TRUE (284)
LIT_CHAR (285) 58
LIT_STRING (286) 59
TOKEN_ERROR (290)
error (291)
UNARY_MINUS (293)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
toplevel_decls (49)
    on left: 2 3, on right: 1 3
toplevel_decl (50)
    on left: 4 5, on right: 3
vardecl (51)
    on left: 6 7, on right: 4
fundecl (52)
    on left: 8, on right: 5
parameters (53)
    on left: 9 10, on right: 8
param_list (54)
    on left: 11 12, on right: 10 12
param (55)
    on left: 13, on right: 11 12
type (56)
    on left: 14 15, on right: 6 7 8 13
identifier (57)
    on left: 16, on right: 6 7 8 13 27 32 33 38 39
command (58)
    on left: 17 18 19, on right: 8 22 23 34 35 36
block (59)
    on left: 20, on right: 18
commands (60)
    on left: 21, on right: 20
command_list (61)
    on left: 22 23, on right: 21 23
empty_command (62)
    on left: 24, on right: 19
simple_statement (63)
    on left: 25 26 27 28 29 30 31, on right: 17
lvalue (64)
    on left: 32 33, on right: 29
if_statement (65)
    on left: 34 35, on right: 30
while_statement (66)
    on left: 36, on right: 31
expr (67)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55, on right: 25 26 28 29 33 34 35 36 38 40 41 42 43 44 45 46 47
    48 49 50 51 52 53 54 55 62 63
atom (68)
    on left: 56 57 58 59, on right: 37
arguments (69)
    on left: 60 61, on right: 39
arg_list (70)
    on left: 62 63, on right: 61 63


state 0

    0 $accept: . program $end

    KW_INT   shift, and go to state 1
    KW_CHAR  shift, and go to state 2

    $default  reduce using rule 2 (toplevel_decls)

    program         go to state 3
    toplevel_decls  go to state 4
    toplevel_decl   go to state 5
    vardecl         go to state 6
    fundecl         go to state 7
    type            go to state 8


state 1

   14 type: KW_INT .

    $default  reduce using rule 14 (type)


state 2

   15 type: KW_CHAR .

    $default  reduce using rule 15 (type)


state 3

    0 $accept: program . $end

    $end  shift, and go to state 9


state 4

    1 program: toplevel_decls .

    $default  reduce using rule 1 (program)


state 5

    3 toplevel_decls: toplevel_decl . toplevel_decls

    KW_INT   shift, and go to state 1
    KW_CHAR  shift, and go to state 2

    $default  reduce using rule 2 (toplevel_decls)

    toplevel_decls  go to state 10
    toplevel_decl   go to state 5
    vardecl         go to state 6
    fundecl         go to state 7
    type            go to state 8


state 6

    4 toplevel_decl: vardecl .

    $default  reduce using rule 4 (toplevel_decl)


state 7

    5 toplevel_decl: fundecl .

    $default  reduce using rule 5 (toplevel_decl)


state 8

    6 vardecl: type . identifier ';'
    7        | type . identifier '[' LIT_INTEGER ']' ';'
    8 fundecl: type . identifier '(' parameters ')' command

    TK_IDENTIFIER  shift, and go to state 11

    identifier  go to state 12


state 9

    0 $accept: program $end .

    $default  accept


state 10

    3 toplevel_decls: toplevel_decl toplevel_decls .

    $default  reduce using rule 3 (toplevel_decls)


state 11

   16 identifier: TK_IDENTIFIER .

    $default  reduce using rule 16 (identifier)


state 12

    6 vardecl: type identifier . ';'
    7        | type identifier . '[' LIT_INTEGER ']' ';'
    8 fundecl: type identifier . '(' parameters ')' command

    ';'  shift, and go to state 13
    '['  shift, and go to state 14
    '('  shift, and go to state 15


state 13

    6 vardecl: type identifier ';' .

    $default  reduce using rule 6 (vardecl)


state 14

    7 vardecl: type identifier '[' . LIT_INTEGER ']' ';'

    LIT_INTEGER  shift, and go to state 16


state 15

    8 fundecl: type identifier '(' . parameters ')' command

    KW_INT   shift, and go to state 1
    KW_CHAR  shift, and go to state 2

    $default  reduce using rule 9 (parameters)

    parameters  go to state 17
    param_list  go to state 18
    param       go to state 19
    type        go to state 20


state 16

    7 vardecl: type identifier '[' LIT_INTEGER . ']' ';'

    ']'  shift, and go to state 21


state 17

    8 fundecl: type identifier '(' parameters . ')' command

    ')'  shift, and go to state 22


state 18

   10 parameters: param_list .

    $default  reduce using rule 10 (parameters)


state 19

   11 param_list: param .
   12           | param . ',' param_list

    ','  shift, and go to state 23

    $default  reduce using rule 11 (param_list)


state 20

   13 param: type . identifier

    TK_IDENTIFIER  shift, and go to state 11

    identifier  go to state 24


state 21

    7 vardecl: type identifier '[' LIT_INTEGER ']' . ';'

    ';'  shift, and go to state 25


state 22

    8 fundecl: type identifier '(' parameters ')' . command

    KW_IF          shift, and go to state 26
    KW_WHILE       shift, and go to state 27
    KW_PRINT       shift, and go to state 28
    KW_RETURN      shift, and go to state 29
    KW_READ        shift, and go to state 30
    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    '{'            shift, and go to state 38

    $default  reduce using rule 24 (empty_command)

    identifier        go to state 39
    command           go to state 40
    block             go to state 41
    empty_command     go to state 42
    simple_statement  go to state 43
    lvalue            go to state 44
    if_statement      go to state 45
    while_statement   go to state 46
    expr              go to state 47
    atom              go to state 48


state 23

   12 param_list: param ',' . param_list

    KW_INT   shift, and go to state 1
    KW_CHAR  shift, and go to state 2

    param_list  go to state 49
    param       go to state 19
    type        go to state 20


state 24

   13 param: type identifier .

    $default  reduce using rule 13 (param)


state 25

    7 vardecl: type identifier '[' LIT_INTEGER ']' ';' .

    $default  reduce using rule 7 (vardecl)


state 26

   34 if_statement: KW_IF . '(' expr ')' KW_THEN command
   35             | KW_IF . '(' expr ')' KW_THEN command KW_ELSE command

    '('  shift, and go to state 50


state 27

   36 while_statement: KW_WHILE . '(' expr ')' command

    '('  shift, and go to state 51


state 28

   28 simple_statement: KW_PRINT . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 53
    atom        go to state 48


state 29

   26 simple_statement: KW_RETURN . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 54
    atom        go to state 48


state 30

   27 simple_statement: KW_READ . identifier

    TK_IDENTIFIER  shift, and go to state 11

    identifier  go to state 55


state 31

   16 identifier: TK_IDENTIFIER .
   56 atom: TK_IDENTIFIER .

    '['       reduce using rule 16 (identifier)
    '('       reduce using rule 16 (identifier)
    '='       reduce using rule 16 (identifier)
    $default  reduce using rule 56 (atom)


state 32

   57 atom: LIT_INTEGER .

    $default  reduce using rule 57 (atom)


state 33

   58 atom: LIT_CHAR .

    $default  reduce using rule 58 (atom)


state 34

   59 atom: LIT_STRING .

    $default  reduce using rule 59 (atom)


state 35

   53 expr: '!' . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 56
    atom        go to state 48


state 36

   54 expr: '-' . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 57
    atom        go to state 48


state 37

   55 expr: '(' . expr ')'

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 58
    atom        go to state 48


state 38

   20 block: '{' . commands '}'

    KW_IF          shift, and go to state 26
    KW_WHILE       shift, and go to state 27
    KW_PRINT       shift, and go to state 28
    KW_RETURN      shift, and go to state 29
    KW_READ        shift, and go to state 30
    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    '{'            shift, and go to state 38

    $default  reduce using rule 24 (empty_command)

    identifier        go to state 39
    command           go to state 59
    block             go to state 41
    commands          go to state 60
    command_list      go to state 61
    empty_command     go to state 42
    simple_statement  go to state 43
    lvalue            go to state 44
    if_statement      go to state 45
    while_statement   go to state 46
    expr              go to state 47
    atom              go to state 48


state 39

   32 lvalue: identifier .
   33       | identifier . '[' expr ']'
   38 expr: identifier . '[' expr ']'
   39     | identifier . '(' arguments ')'

    '['  shift, and go to state 62
    '('  shift, and go to state 63

    $default  reduce using rule 32 (lvalue)


state 40

    8 fundecl: type identifier '(' parameters ')' command .

    $default  reduce using rule 8 (fundecl)


state 41

   18 command: block .

    $default  reduce using rule 18 (command)


state 42

   19 command: empty_command .

    $default  reduce using rule 19 (command)


state 43

   17 command: simple_statement .

    $default  reduce using rule 17 (command)


state 44

   29 simple_statement: lvalue . '=' expr

    '='  shift, and go to state 64


state 45

   30 simple_statement: if_statement .

    $default  reduce using rule 30 (simple_statement)


state 46

   31 simple_statement: while_statement .

    $default  reduce using rule 31 (simple_statement)


state 47

   25 simple_statement: expr .
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_NE   shift, and go to state 68
    OPERATOR_AND  shift, and go to state 69
    OPERATOR_OR   shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77

    $default  reduce using rule 25 (simple_statement)


state 48

   37 expr: atom .

    $default  reduce using rule 37 (expr)


state 49

   12 param_list: param ',' param_list .

    $default  reduce using rule 12 (param_list)


state 50

   34 if_statement: KW_IF '(' . expr ')' KW_THEN command
   35             | KW_IF '(' . expr ')' KW_THEN command KW_ELSE command

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 78
    atom        go to state 48


state 51

   36 while_statement: KW_WHILE '(' . expr ')' command

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 79
    atom        go to state 48


state 52

   38 expr: identifier . '[' expr ']'
   39     | identifier . '(' arguments ')'

    '['  shift, and go to state 80
    '('  shift, and go to state 63


state 53

   28 simple_statement: KW_PRINT expr .
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_NE   shift, and go to state 68
    OPERATOR_AND  shift, and go to state 69
    OPERATOR_OR   shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77

    $default  reduce using rule 28 (simple_statement)


state 54

   26 simple_statement: KW_RETURN expr .
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_NE   shift, and go to state 68
    OPERATOR_AND  shift, and go to state 69
    OPERATOR_OR   shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77

    $default  reduce using rule 26 (simple_statement)


state 55

   27 simple_statement: KW_READ identifier .

    $default  reduce using rule 27 (simple_statement)


state 56

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr
   53     | '!' expr .

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77

    $default  reduce using rule 53 (expr)

    Conflict between rule 53 and token OPERATOR_LE resolved as reduce (OPERATOR_LE < '!').
    Conflict between rule 53 and token OPERATOR_GE resolved as reduce (OPERATOR_GE < '!').
    Conflict between rule 53 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < '!').
    Conflict between rule 53 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < '!').
    Conflict between rule 53 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '!').
    Conflict between rule 53 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '!').
    Conflict between rule 53 and token '<' resolved as reduce ('<' < '!').
    Conflict between rule 53 and token '>' resolved as reduce ('>' < '!').
    Conflict between rule 53 and token '+' resolved as shift ('!' < '+').
    Conflict between rule 53 and token '-' resolved as shift ('!' < '-').
    Conflict between rule 53 and token '*' resolved as shift ('!' < '*').
    Conflict between rule 53 and token '/' resolved as shift ('!' < '/').
    Conflict between rule 53 and token '%' resolved as shift ('!' < '%').


state 57

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr
   54     | '-' expr .

    $default  reduce using rule 54 (expr)

    Conflict between rule 54 and token OPERATOR_LE resolved as reduce (OPERATOR_LE < UNARY_MINUS).
    Conflict between rule 54 and token OPERATOR_GE resolved as reduce (OPERATOR_GE < UNARY_MINUS).
    Conflict between rule 54 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < UNARY_MINUS).
    Conflict between rule 54 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < UNARY_MINUS).
    Conflict between rule 54 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < UNARY_MINUS).
    Conflict between rule 54 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < UNARY_MINUS).
    Conflict between rule 54 and token '<' resolved as reduce ('<' < UNARY_MINUS).
    Conflict between rule 54 and token '>' resolved as reduce ('>' < UNARY_MINUS).
    Conflict between rule 54 and token '+' resolved as reduce ('+' < UNARY_MINUS).
    Conflict between rule 54 and token '-' resolved as reduce ('-' < UNARY_MINUS).
    Conflict between rule 54 and token '*' resolved as reduce ('*' < UNARY_MINUS).
    Conflict between rule 54 and token '/' resolved as reduce ('/' < UNARY_MINUS).
    Conflict between rule 54 and token '%' resolved as reduce ('%' < UNARY_MINUS).


state 58

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr
   55     | '(' expr . ')'

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_NE   shift, and go to state 68
    OPERATOR_AND  shift, and go to state 69
    OPERATOR_OR   shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    ')'           shift, and go to state 81


state 59

   22 command_list: command .
   23             | command . ';' command_list

    ';'  shift, and go to state 82

    $default  reduce using rule 22 (command_list)


state 60

   20 block: '{' commands . '}'

    '}'  shift, and go to state 83


state 61

   21 commands: command_list .

    $default  reduce using rule 21 (commands)


state 62

   33 lvalue: identifier '[' . expr ']'
   38 expr: identifier '[' . expr ']'

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 84
    atom        go to state 48


state 63

   39 expr: identifier '(' . arguments ')'

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    $default  reduce using rule 60 (arguments)

    identifier  go to state 52
    expr        go to state 85
    atom        go to state 48
    arguments   go to state 86
    arg_list    go to state 87


state 64

   29 simple_statement: lvalue '=' . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 88
    atom        go to state 48


state 65

   47 expr: expr OPERATOR_LE . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 89
    atom        go to state 48


state 66

   48 expr: expr OPERATOR_GE . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 90
    atom        go to state 48


state 67

   49 expr: expr OPERATOR_EQ . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 91
    atom        go to state 48


state 68

   50 expr: expr OPERATOR_NE . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 92
    atom        go to state 48


state 69

   51 expr: expr OPERATOR_AND . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 93
    atom        go to state 48


state 70

   52 expr: expr OPERATOR_OR . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 94
    atom        go to state 48


state 71

   45 expr: expr '<' . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 95
    atom        go to state 48


state 72

   46 expr: expr '>' . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 96
    atom        go to state 48


state 73

   40 expr: expr '+' . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 97
    atom        go to state 48


state 74

   41 expr: expr '-' . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 98
    atom        go to state 48


state 75

   42 expr: expr '*' . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 99
    atom        go to state 48


state 76

   43 expr: expr '/' . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 100
    atom        go to state 48


state 77

   44 expr: expr '%' . expr

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 101
    atom        go to state 48


state 78

   34 if_statement: KW_IF '(' expr . ')' KW_THEN command
   35             | KW_IF '(' expr . ')' KW_THEN command KW_ELSE command
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_NE   shift, and go to state 68
    OPERATOR_AND  shift, and go to state 69
    OPERATOR_OR   shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    ')'           shift, and go to state 102


state 79

   36 while_statement: KW_WHILE '(' expr . ')' command
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_NE   shift, and go to state 68
    OPERATOR_AND  shift, and go to state 69
    OPERATOR_OR   shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    ')'           shift, and go to state 103


state 80

   38 expr: identifier '[' . expr ']'

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 104
    atom        go to state 48


state 81

   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)


state 82

   23 command_list: command ';' . command_list

    KW_IF          shift, and go to state 26
    KW_WHILE       shift, and go to state 27
    KW_PRINT       shift, and go to state 28
    KW_RETURN      shift, and go to state 29
    KW_READ        shift, and go to state 30
    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    '{'            shift, and go to state 38

    $default  reduce using rule 24 (empty_command)

    identifier        go to state 39
    command           go to state 59
    block             go to state 41
    command_list      go to state 105
    empty_command     go to state 42
    simple_statement  go to state 43
    lvalue            go to state 44
    if_statement      go to state 45
    while_statement   go to state 46
    expr              go to state 47
    atom              go to state 48


state 83

   20 block: '{' commands '}' .

    $default  reduce using rule 20 (block)


state 84

   33 lvalue: identifier '[' expr . ']'
   38 expr: identifier '[' expr . ']'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_NE   shift, and go to state 68
    OPERATOR_AND  shift, and go to state 69
    OPERATOR_OR   shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    ']'           shift, and go to state 106


state 85

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr
   62 arg_list: expr .
   63         | expr . ',' arg_list

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_NE   shift, and go to state 68
    OPERATOR_AND  shift, and go to state 69
    OPERATOR_OR   shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    ','           shift, and go to state 107

    $default  reduce using rule 62 (arg_list)


state 86

   39 expr: identifier '(' arguments . ')'

    ')'  shift, and go to state 108


state 87

   61 arguments: arg_list .

    $default  reduce using rule 61 (arguments)


state 88

   29 simple_statement: lvalue '=' expr .
   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_NE   shift, and go to state 68
    OPERATOR_AND  shift, and go to state 69
    OPERATOR_OR   shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77

    $default  reduce using rule 29 (simple_statement)


state 89

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   47     | expr OPERATOR_LE expr .
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77

    OPERATOR_LE  error (nonassociative)
    OPERATOR_GE  error (nonassociative)
    '<'          error (nonassociative)
    '>'          error (nonassociative)

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token OPERATOR_LE resolved as an error (%nonassoc OPERATOR_LE).
    Conflict between rule 47 and token OPERATOR_GE resolved as an error (%nonassoc OPERATOR_GE).
    Conflict between rule 47 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < OPERATOR_LE).
    Conflict between rule 47 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < OPERATOR_LE).
    Conflict between rule 47 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < OPERATOR_LE).
    Conflict between rule 47 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < OPERATOR_LE).
    Conflict between rule 47 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 47 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 47 and token '+' resolved as shift (OPERATOR_LE < '+').
    Conflict between rule 47 and token '-' resolved as shift (OPERATOR_LE < '-').
    Conflict between rule 47 and token '*' resolved as shift (OPERATOR_LE < '*').
    Conflict between rule 47 and token '/' resolved as shift (OPERATOR_LE < '/').
    Conflict between rule 47 and token '%' resolved as shift (OPERATOR_LE < '%').


state 90

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   48     | expr OPERATOR_GE expr .
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77

    OPERATOR_LE  error (nonassociative)
    OPERATOR_GE  error (nonassociative)
    '<'          error (nonassociative)
    '>'          error (nonassociative)

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token OPERATOR_LE resolved as an error (%nonassoc OPERATOR_LE).
    Conflict between rule 48 and token OPERATOR_GE resolved as an error (%nonassoc OPERATOR_GE).
    Conflict between rule 48 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < OPERATOR_GE).
    Conflict between rule 48 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < OPERATOR_GE).
    Conflict between rule 48 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < OPERATOR_GE).
    Conflict between rule 48 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < OPERATOR_GE).
    Conflict between rule 48 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 48 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 48 and token '+' resolved as shift (OPERATOR_GE < '+').
    Conflict between rule 48 and token '-' resolved as shift (OPERATOR_GE < '-').
    Conflict between rule 48 and token '*' resolved as shift (OPERATOR_GE < '*').
    Conflict between rule 48 and token '/' resolved as shift (OPERATOR_GE < '/').
    Conflict between rule 48 and token '%' resolved as shift (OPERATOR_GE < '%').


state 91

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   49     | expr OPERATOR_EQ expr .
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE  shift, and go to state 65
    OPERATOR_GE  shift, and go to state 66
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '+'          shift, and go to state 73
    '-'          shift, and go to state 74
    '*'          shift, and go to state 75
    '/'          shift, and go to state 76
    '%'          shift, and go to state 77

    OPERATOR_EQ  error (nonassociative)
    OPERATOR_NE  error (nonassociative)

    $default  reduce using rule 49 (expr)

    Conflict between rule 49 and token OPERATOR_LE resolved as shift (OPERATOR_EQ < OPERATOR_LE).
    Conflict between rule 49 and token OPERATOR_GE resolved as shift (OPERATOR_EQ < OPERATOR_GE).
    Conflict between rule 49 and token OPERATOR_EQ resolved as an error (%nonassoc OPERATOR_EQ).
    Conflict between rule 49 and token OPERATOR_NE resolved as an error (%nonassoc OPERATOR_NE).
    Conflict between rule 49 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < OPERATOR_EQ).
    Conflict between rule 49 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < OPERATOR_EQ).
    Conflict between rule 49 and token '<' resolved as shift (OPERATOR_EQ < '<').
    Conflict between rule 49 and token '>' resolved as shift (OPERATOR_EQ < '>').
    Conflict between rule 49 and token '+' resolved as shift (OPERATOR_EQ < '+').
    Conflict between rule 49 and token '-' resolved as shift (OPERATOR_EQ < '-').
    Conflict between rule 49 and token '*' resolved as shift (OPERATOR_EQ < '*').
    Conflict between rule 49 and token '/' resolved as shift (OPERATOR_EQ < '/').
    Conflict between rule 49 and token '%' resolved as shift (OPERATOR_EQ < '%').


state 92

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   50     | expr OPERATOR_NE expr .
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE  shift, and go to state 65
    OPERATOR_GE  shift, and go to state 66
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '+'          shift, and go to state 73
    '-'          shift, and go to state 74
    '*'          shift, and go to state 75
    '/'          shift, and go to state 76
    '%'          shift, and go to state 77

    OPERATOR_EQ  error (nonassociative)
    OPERATOR_NE  error (nonassociative)

    $default  reduce using rule 50 (expr)

    Conflict between rule 50 and token OPERATOR_LE resolved as shift (OPERATOR_NE < OPERATOR_LE).
    Conflict between rule 50 and token OPERATOR_GE resolved as shift (OPERATOR_NE < OPERATOR_GE).
    Conflict between rule 50 and token OPERATOR_EQ resolved as an error (%nonassoc OPERATOR_EQ).
    Conflict between rule 50 and token OPERATOR_NE resolved as an error (%nonassoc OPERATOR_NE).
    Conflict between rule 50 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < OPERATOR_NE).
    Conflict between rule 50 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < OPERATOR_NE).
    Conflict between rule 50 and token '<' resolved as shift (OPERATOR_NE < '<').
    Conflict between rule 50 and token '>' resolved as shift (OPERATOR_NE < '>').
    Conflict between rule 50 and token '+' resolved as shift (OPERATOR_NE < '+').
    Conflict between rule 50 and token '-' resolved as shift (OPERATOR_NE < '-').
    Conflict between rule 50 and token '*' resolved as shift (OPERATOR_NE < '*').
    Conflict between rule 50 and token '/' resolved as shift (OPERATOR_NE < '/').
    Conflict between rule 50 and token '%' resolved as shift (OPERATOR_NE < '%').


state 93

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   51     | expr OPERATOR_AND expr .
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE  shift, and go to state 65
    OPERATOR_GE  shift, and go to state 66
    OPERATOR_EQ  shift, and go to state 67
    OPERATOR_NE  shift, and go to state 68
    '<'          shift, and go to state 71
    '>'          shift, and go to state 72
    '+'          shift, and go to state 73
    '-'          shift, and go to state 74
    '*'          shift, and go to state 75
    '/'          shift, and go to state 76
    '%'          shift, and go to state 77

    $default  reduce using rule 51 (expr)

    Conflict between rule 51 and token OPERATOR_LE resolved as shift (OPERATOR_AND < OPERATOR_LE).
    Conflict between rule 51 and token OPERATOR_GE resolved as shift (OPERATOR_AND < OPERATOR_GE).
    Conflict between rule 51 and token OPERATOR_EQ resolved as shift (OPERATOR_AND < OPERATOR_EQ).
    Conflict between rule 51 and token OPERATOR_NE resolved as shift (OPERATOR_AND < OPERATOR_NE).
    Conflict between rule 51 and token OPERATOR_AND resolved as reduce (%left OPERATOR_AND).
    Conflict between rule 51 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < OPERATOR_AND).
    Conflict between rule 51 and token '<' resolved as shift (OPERATOR_AND < '<').
    Conflict between rule 51 and token '>' resolved as shift (OPERATOR_AND < '>').
    Conflict between rule 51 and token '+' resolved as shift (OPERATOR_AND < '+').
    Conflict between rule 51 and token '-' resolved as shift (OPERATOR_AND < '-').
    Conflict between rule 51 and token '*' resolved as shift (OPERATOR_AND < '*').
    Conflict between rule 51 and token '/' resolved as shift (OPERATOR_AND < '/').
    Conflict between rule 51 and token '%' resolved as shift (OPERATOR_AND < '%').


state 94

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr
   52     | expr OPERATOR_OR expr .

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_NE   shift, and go to state 68
    OPERATOR_AND  shift, and go to state 69
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77

    $default  reduce using rule 52 (expr)

    Conflict between rule 52 and token OPERATOR_LE resolved as shift (OPERATOR_OR < OPERATOR_LE).
    Conflict between rule 52 and token OPERATOR_GE resolved as shift (OPERATOR_OR < OPERATOR_GE).
    Conflict between rule 52 and token OPERATOR_EQ resolved as shift (OPERATOR_OR < OPERATOR_EQ).
    Conflict between rule 52 and token OPERATOR_NE resolved as shift (OPERATOR_OR < OPERATOR_NE).
    Conflict between rule 52 and token OPERATOR_AND resolved as shift (OPERATOR_OR < OPERATOR_AND).
    Conflict between rule 52 and token OPERATOR_OR resolved as reduce (%left OPERATOR_OR).
    Conflict between rule 52 and token '<' resolved as shift (OPERATOR_OR < '<').
    Conflict between rule 52 and token '>' resolved as shift (OPERATOR_OR < '>').
    Conflict between rule 52 and token '+' resolved as shift (OPERATOR_OR < '+').
    Conflict between rule 52 and token '-' resolved as shift (OPERATOR_OR < '-').
    Conflict between rule 52 and token '*' resolved as shift (OPERATOR_OR < '*').
    Conflict between rule 52 and token '/' resolved as shift (OPERATOR_OR < '/').
    Conflict between rule 52 and token '%' resolved as shift (OPERATOR_OR < '%').


state 95

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   45     | expr '<' expr .
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77

    OPERATOR_LE  error (nonassociative)
    OPERATOR_GE  error (nonassociative)
    '<'          error (nonassociative)
    '>'          error (nonassociative)

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token OPERATOR_LE resolved as an error (%nonassoc OPERATOR_LE).
    Conflict between rule 45 and token OPERATOR_GE resolved as an error (%nonassoc OPERATOR_GE).
    Conflict between rule 45 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < '<').
    Conflict between rule 45 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < '<').
    Conflict between rule 45 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '<').
    Conflict between rule 45 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '<').
    Conflict between rule 45 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 45 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 45 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 45 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 45 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 45 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 45 and token '%' resolved as shift ('<' < '%').


state 96

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   46     | expr '>' expr .
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74
    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77

    OPERATOR_LE  error (nonassociative)
    OPERATOR_GE  error (nonassociative)
    '<'          error (nonassociative)
    '>'          error (nonassociative)

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token OPERATOR_LE resolved as an error (%nonassoc OPERATOR_LE).
    Conflict between rule 46 and token OPERATOR_GE resolved as an error (%nonassoc OPERATOR_GE).
    Conflict between rule 46 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < '>').
    Conflict between rule 46 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < '>').
    Conflict between rule 46 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '>').
    Conflict between rule 46 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '>').
    Conflict between rule 46 and token '<' resolved as an error (%nonassoc '<').
    Conflict between rule 46 and token '>' resolved as an error (%nonassoc '>').
    Conflict between rule 46 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 46 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 46 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 46 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 46 and token '%' resolved as shift ('>' < '%').


state 97

   40 expr: expr . '+' expr
   40     | expr '+' expr .
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token OPERATOR_LE resolved as reduce (OPERATOR_LE < '+').
    Conflict between rule 40 and token OPERATOR_GE resolved as reduce (OPERATOR_GE < '+').
    Conflict between rule 40 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < '+').
    Conflict between rule 40 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < '+').
    Conflict between rule 40 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '+').
    Conflict between rule 40 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '+').
    Conflict between rule 40 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 40 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 40 and token '+' resolved as reduce (%left '+').
    Conflict between rule 40 and token '-' resolved as reduce (%left '-').
    Conflict between rule 40 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 40 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 40 and token '%' resolved as shift ('+' < '%').


state 98

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   41     | expr '-' expr .
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    '*'  shift, and go to state 75
    '/'  shift, and go to state 76
    '%'  shift, and go to state 77

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token OPERATOR_LE resolved as reduce (OPERATOR_LE < '-').
    Conflict between rule 41 and token OPERATOR_GE resolved as reduce (OPERATOR_GE < '-').
    Conflict between rule 41 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < '-').
    Conflict between rule 41 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < '-').
    Conflict between rule 41 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '-').
    Conflict between rule 41 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '-').
    Conflict between rule 41 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 41 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 41 and token '+' resolved as reduce (%left '+').
    Conflict between rule 41 and token '-' resolved as reduce (%left '-').
    Conflict between rule 41 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 41 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 41 and token '%' resolved as shift ('-' < '%').


state 99

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   42     | expr '*' expr .
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token OPERATOR_LE resolved as reduce (OPERATOR_LE < '*').
    Conflict between rule 42 and token OPERATOR_GE resolved as reduce (OPERATOR_GE < '*').
    Conflict between rule 42 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < '*').
    Conflict between rule 42 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < '*').
    Conflict between rule 42 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '*').
    Conflict between rule 42 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '*').
    Conflict between rule 42 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 42 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 42 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 42 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 42 and token '*' resolved as reduce (%left '*').
    Conflict between rule 42 and token '/' resolved as reduce (%left '/').
    Conflict between rule 42 and token '%' resolved as reduce (%left '%').


state 100

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   43     | expr '/' expr .
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token OPERATOR_LE resolved as reduce (OPERATOR_LE < '/').
    Conflict between rule 43 and token OPERATOR_GE resolved as reduce (OPERATOR_GE < '/').
    Conflict between rule 43 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < '/').
    Conflict between rule 43 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < '/').
    Conflict between rule 43 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '/').
    Conflict between rule 43 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '/').
    Conflict between rule 43 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 43 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 43 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 43 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 43 and token '*' resolved as reduce (%left '*').
    Conflict between rule 43 and token '/' resolved as reduce (%left '/').
    Conflict between rule 43 and token '%' resolved as reduce (%left '%').


state 101

   40 expr: expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   44     | expr '%' expr .
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    $default  reduce using rule 44 (expr)

    Conflict between rule 44 and token OPERATOR_LE resolved as reduce (OPERATOR_LE < '%').
    Conflict between rule 44 and token OPERATOR_GE resolved as reduce (OPERATOR_GE < '%').
    Conflict between rule 44 and token OPERATOR_EQ resolved as reduce (OPERATOR_EQ < '%').
    Conflict between rule 44 and token OPERATOR_NE resolved as reduce (OPERATOR_NE < '%').
    Conflict between rule 44 and token OPERATOR_AND resolved as reduce (OPERATOR_AND < '%').
    Conflict between rule 44 and token OPERATOR_OR resolved as reduce (OPERATOR_OR < '%').
    Conflict between rule 44 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 44 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 44 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 44 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 44 and token '*' resolved as reduce (%left '*').
    Conflict between rule 44 and token '/' resolved as reduce (%left '/').
    Conflict between rule 44 and token '%' resolved as reduce (%left '%').


state 102

   34 if_statement: KW_IF '(' expr ')' . KW_THEN command
   35             | KW_IF '(' expr ')' . KW_THEN command KW_ELSE command

    KW_THEN  shift, and go to state 109


state 103

   36 while_statement: KW_WHILE '(' expr ')' . command

    KW_IF          shift, and go to state 26
    KW_WHILE       shift, and go to state 27
    KW_PRINT       shift, and go to state 28
    KW_RETURN      shift, and go to state 29
    KW_READ        shift, and go to state 30
    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    '{'            shift, and go to state 38

    $default  reduce using rule 24 (empty_command)

    identifier        go to state 39
    command           go to state 110
    block             go to state 41
    empty_command     go to state 42
    simple_statement  go to state 43
    lvalue            go to state 44
    if_statement      go to state 45
    while_statement   go to state 46
    expr              go to state 47
    atom              go to state 48


state 104

   38 expr: identifier '[' expr . ']'
   40     | expr . '+' expr
   41     | expr . '-' expr
   42     | expr . '*' expr
   43     | expr . '/' expr
   44     | expr . '%' expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . OPERATOR_LE expr
   48     | expr . OPERATOR_GE expr
   49     | expr . OPERATOR_EQ expr
   50     | expr . OPERATOR_NE expr
   51     | expr . OPERATOR_AND expr
   52     | expr . OPERATOR_OR expr

    OPERATOR_LE   shift, and go to state 65
    OPERATOR_GE   shift, and go to state 66
    OPERATOR_EQ   shift, and go to state 67
    OPERATOR_NE   shift, and go to state 68
    OPERATOR_AND  shift, and go to state 69
    OPERATOR_OR   shift, and go to state 70
    '<'           shift, and go to state 71
    '>'           shift, and go to state 72
    '+'           shift, and go to state 73
    '-'           shift, and go to state 74
    '*'           shift, and go to state 75
    '/'           shift, and go to state 76
    '%'           shift, and go to state 77
    ']'           shift, and go to state 111


state 105

   23 command_list: command ';' command_list .

    $default  reduce using rule 23 (command_list)


state 106

   33 lvalue: identifier '[' expr ']' .
   38 expr: identifier '[' expr ']' .

    '='       reduce using rule 33 (lvalue)
    $default  reduce using rule 38 (expr)


state 107

   63 arg_list: expr ',' . arg_list

    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37

    identifier  go to state 52
    expr        go to state 85
    atom        go to state 48
    arg_list    go to state 112


state 108

   39 expr: identifier '(' arguments ')' .

    $default  reduce using rule 39 (expr)


state 109

   34 if_statement: KW_IF '(' expr ')' KW_THEN . command
   35             | KW_IF '(' expr ')' KW_THEN . command KW_ELSE command

    KW_IF          shift, and go to state 26
    KW_WHILE       shift, and go to state 27
    KW_PRINT       shift, and go to state 28
    KW_RETURN      shift, and go to state 29
    KW_READ        shift, and go to state 30
    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    '{'            shift, and go to state 38

    $default  reduce using rule 24 (empty_command)

    identifier        go to state 39
    command           go to state 113
    block             go to state 41
    empty_command     go to state 42
    simple_statement  go to state 43
    lvalue            go to state 44
    if_statement      go to state 45
    while_statement   go to state 46
    expr              go to state 47
    atom              go to state 48


state 110

   36 while_statement: KW_WHILE '(' expr ')' command .

    $default  reduce using rule 36 (while_statement)


state 111

   38 expr: identifier '[' expr ']' .

    $default  reduce using rule 38 (expr)


state 112

   63 arg_list: expr ',' arg_list .

    $default  reduce using rule 63 (arg_list)


state 113

   34 if_statement: KW_IF '(' expr ')' KW_THEN command .
   35             | KW_IF '(' expr ')' KW_THEN command . KW_ELSE command

    KW_ELSE  shift, and go to state 114

    KW_ELSE   [reduce using rule 34 (if_statement)]
    $default  reduce using rule 34 (if_statement)


state 114

   35 if_statement: KW_IF '(' expr ')' KW_THEN command KW_ELSE . command

    KW_IF          shift, and go to state 26
    KW_WHILE       shift, and go to state 27
    KW_PRINT       shift, and go to state 28
    KW_RETURN      shift, and go to state 29
    KW_READ        shift, and go to state 30
    TK_IDENTIFIER  shift, and go to state 31
    LIT_INTEGER    shift, and go to state 32
    LIT_CHAR       shift, and go to state 33
    LIT_STRING     shift, and go to state 34
    '!'            shift, and go to state 35
    '-'            shift, and go to state 36
    '('            shift, and go to state 37
    '{'            shift, and go to state 38

    $default  reduce using rule 24 (empty_command)

    identifier        go to state 39
    command           go to state 115
    block             go to state 41
    empty_command     go to state 42
    simple_statement  go to state 43
    lvalue            go to state 44
    if_statement      go to state 45
    while_statement   go to state 46
    expr              go to state 47
    atom              go to state 48


state 115

   35 if_statement: KW_IF '(' expr ')' KW_THEN command KW_ELSE command .

    $default  reduce using rule 35 (if_statement)
